name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  install:
    name: Install package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Check package-lock.json
        run: npm run package:check

      - name: Install package
        run: npm ci

  commitlint:
    if: github.event_name == 'pull_request'
    name: CommitLint
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose --color

  lint:
    name: Lint code
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run lint
        run: npm run lint -- --max-processes 1

  test:
    name: Test
    needs:
      - install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x, 21.x, 22.x, 23.x ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Testing with Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: '**/node_modules'
          key: npm-${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run test
        run: npm run test

      - name: Upload sonar reports
        if: matrix.node-version == '22.x'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sonar-reports
          path: |
            coverage/lcov-coverage.info
            sonar-report.xml

  sonarcloud:
    name: SonarCloud Scan
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Download test reports
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: sonar-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run build
        run: npm run build
